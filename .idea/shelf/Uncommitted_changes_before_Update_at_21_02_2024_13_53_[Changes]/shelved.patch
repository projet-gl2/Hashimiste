Index: src/main/java/fr/hashimiste/maps/Grille.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package fr.hashimiste.maps;\n\nimport fr.hashimiste.Difficulte;\nimport fr.hashimiste.techniques.Technique;\n\nimport java.awt.geom.Dimension2D;\nimport java.util.ArrayList;\nimport java.util.List;\n\n/**\n * La classe Grille représente une grille dans un jeu ou une tâche.\n * Elle contient des informations sur le niveau de difficulté de la grille, les îles (Ile) dans la grille et les ponts (Pont) dans la grille.\n * Elle fournit des méthodes pour récupérer des informations sur la grille, ses îles et ses ponts.\n */\npublic class Grille {\n    private final Dimension2D dimension;\n    private final Difficulte difficulte;\n    private final List<Ile> iles;\n    private final List<Pont> ponts;\n\n    /**\n     * Créer une grille\n     *\n     * @param dimension  la dimension de la grille\n     * @param difficulte la difficulté de la grille\n     * @param iles       les iles de la grille\n     * @param ponts      les ponts de la grille\n     */\n    public Grille(Dimension2D dimension, Difficulte difficulte, List<Ile> iles, List<Pont> ponts) {\n        this.dimension = dimension;\n        this.difficulte = difficulte;\n        this.iles = iles;\n        this.ponts = ponts;\n    }\n\n    /**\n     * Créer une grille\n     *\n     * @param dimension  la dimension de la grille\n     * @param difficulte la difficulté de la grille\n     * @param iles      les iles de la grille\n     */\n    public Grille(Dimension2D dimension, Difficulte difficulte, List<Ile> iles) {\n        this(dimension, difficulte, iles, new ArrayList<>());\n    }\n\n    /**\n     * Créer une grille\n     *\n     * @param dimension  la dimension de la grille\n     * @param difficulte la difficulté de la grille\n     */\n    public Grille(Dimension2D dimension, Difficulte difficulte) {\n        this(dimension, difficulte, new ArrayList<>());\n    }\n\n    /**\n     * Récupérer la difficulté de la grille\n     *\n     * @return la difficulté de la grille\n     */\n    public Difficulte getDifficulte() {\n        return difficulte;\n    }\n\n    /**\n     * Récupérer les iles de la grille\n     *\n     * @return les iles de la grille\n     */\n    public List<Ile> getIles() {\n        return iles;\n    }\n\n    /**\n     * Récupérer les ponts de la grille\n     *\n     * @return les ponts de la grille\n     */\n    public List<Pont> getPonts() {\n        return ponts;\n    }\n\n    /**\n     * Récupérer une île de la grille\n     * @param x l'abscisse de l'île\n     * @param y l'ordonnée de l'île\n     * @return l'île de la grille\n     */\n    public Ile getIle(int x, int y) {\n        for (Ile ile : iles) {\n            if (ile.getX() == x && ile.getY() == y) {\n                return ile;\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Récupérer la dimension de la grille\n     *\n     * @return la dimension de la grille\n     */\n    public Dimension2D getDimension() {\n        return dimension;\n    }\n\n    /**\n     * Parcourt la grille dans son état actuel pour vérifier les techniques qui s'appliquent aux îles et donner un indice au joueur.\n     * @return l'île qui peut bénéficier d'un indice.\n     */\n    public Ile aide(){\n        Technique[] lTech = Technique.values();\n        int fIndMin = lTech.length; //une liste des fonctions qui appliquent une technique\n        //elles prennent en paramètre une île, et renvoient vrai si la technique s'applique à l'île\n\n        Ile aideIle = null; //l'île sur laquelle on peut avancer à l'aide des techniques\n\n        for(int i=0;i<this.dimension.getWidth();i++){ //parcours colonnes\n            for(int j=0;j<this.dimension.getHeight();j++){ //parcours lignes\n                if(this.getIle(i,j) != null && !(this.getIle(i,j).isComplete())) { //si l'île existe et n'est pas complète\n                    for (int fInd=0; fInd<fIndMin; fInd++){\n                        if(lTech[fInd].execute(this.getIle(i, j))){ //si la technique s'applique à l'île\n                            aideIle = this.getIle(i,j);\n                            fIndMin = fInd; //on ne vérifie que les techniques de plus bas niveau que celles trouvées\n                        }\n                    }\n                }\n            }\n        }\n\n        return aideIle;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/fr/hashimiste/maps/Grille.java b/src/main/java/fr/hashimiste/maps/Grille.java
--- a/src/main/java/fr/hashimiste/maps/Grille.java	(revision 36840514560e937cd0e510517557aa41af4788a3)
+++ b/src/main/java/fr/hashimiste/maps/Grille.java	(date 1708011149311)
@@ -1,5 +1,8 @@
 package fr.hashimiste.maps;
 
+import fr.hashimiste.CaseIle;
+import fr.hashimiste.CasePont;
+import fr.hashimiste.CaseVide;
 import fr.hashimiste.Difficulte;
 import fr.hashimiste.techniques.Technique;
 
@@ -15,6 +18,7 @@
 public class Grille {
     private final Dimension2D dimension;
     private final Difficulte difficulte;
+    private Case[][] matrice;
     private final List<Ile> iles;
     private final List<Pont> ponts;
 
@@ -54,6 +58,49 @@
         this(dimension, difficulte, new ArrayList<>());
     }
 
+    public static Grille
+
+    private void importerIles() {
+        for (fr.hashimiste.Ile ile : map.iles) {
+            this.matrice[ile.x][ile.y] = new CaseIle(ile.x, ile.y, ile.n);
+        }
+    }
+
+    private void importerPonts() {
+        for (fr.hashimiste.Pont pont : map.ponts) {
+            fr.hashimiste.Ile ile1 = pont.ile1;
+            fr.hashimiste.Ile ile2 = pont.ile2;
+            if (pont.ile1.x == pont.ile2.x) {
+                if (pont.ile1.y - pont.ile2.y < 0) {
+                    ile2 = pont.ile1;
+                    ile1 = pont.ile2;
+                }
+                for (int i = ile1.y + 1; i < ile2.y; i++) {
+                    this.matrice[ile1.x][i] = new fr.hashimiste.CasePont(ile1.x, i, pont.n);
+                }
+            }
+            else {
+                if (pont.ile1.x - pont.ile2.x < 0) {
+                    ile2 = pont.ile1;
+                    ile1 = pont.ile2;
+                }
+                for (int i = ile1.x + 1; i < ile2.x; i++) {
+                    this.matrice[i][ile1.y] = new CasePont(i, ile1.y, pont.n);
+                }
+            }
+        }
+    }
+
+    private void caseVide() {
+        for (int i = 0; i < c; i++) {
+            for (int j = 0; j < l; j++) {
+                if (this.matrice[i][j] == null) {
+                    this.matrice[i][j] = new CaseVide(i, j);
+                }
+            }
+        }
+    }
+
     /**
      * Récupérer la difficulté de la grille
      *
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"e29c0059-5eeb-44eb-be8c-5a66edbf6aec\" name=\"Changes\" comment=\"\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/gradle.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/gradle.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/fr/hashimiste/Map.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/fr/hashimiste/Map.java\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"ExternalProjectsData\">\n    <projectState path=\"$PROJECT_DIR$\">\n      <ProjectState />\n    </projectState>\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"ProjectColorInfo\"><![CDATA[{\n  \"associatedIndex\": 5\n}]]></component>\n  <component name=\"ProjectId\" id=\"2bRQaAih2vJCzoSplj1woZmSiQH\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\n    <ConfirmationsSetting value=\"1\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\n    \"WebServerToolWindowFactoryState\": \"false\",\n    \"git-widget-placeholder\": \"feat/db\",\n    \"kotlin-language-version-configured\": \"true\",\n    \"node.js.detected.package.eslint\": \"true\",\n    \"node.js.detected.package.tslint\": \"true\",\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\n    \"node.js.selected.package.tslint\": \"(autodetect)\"\n  }\n}]]></component>\n  <component name=\"SharedIndexes\">\n    <attachedChunks>\n      <set>\n        <option value=\"jdk-16.0.2-temurin-16.0.2-4caba194b151-93269615\" />\n      </set>\n    </attachedChunks>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"e29c0059-5eeb-44eb-be8c-5a66edbf6aec\" name=\"Changes\" comment=\"\" />\n      <created>1706175482167</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1706175482167</updated>\n      <workItem from=\"1706175483939\" duration=\"300000\" />\n    </task>\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State>\n              <option name=\"FILTERS\">\n                <map>\n                  <entry key=\"branch\">\n                    <value>\n                      <list>\n                        <option value=\"origin/master\" />\n                      </list>\n                    </value>\n                  </entry>\n                </map>\n              </option>\n            </State>\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 36840514560e937cd0e510517557aa41af4788a3)
+++ b/.idea/workspace.xml	(date 1708519973717)
@@ -4,10 +4,9 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="e29c0059-5eeb-44eb-be8c-5a66edbf6aec" name="Changes" comment="">
-      <change beforePath="$PROJECT_DIR$/.idea/gradle.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/gradle.xml" afterDir="false" />
+    <list default="true" id="e29c0059-5eeb-44eb-be8c-5a66edbf6aec" name="Changes" comment="Création de classes pour créer la grille de jeu">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/fr/hashimiste/Map.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/fr/hashimiste/Map.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/fr/hashimiste/maps/Grille.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/fr/hashimiste/maps/Grille.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -27,11 +26,16 @@
     </option>
   </component>
   <component name="Git.Settings">
+    <option name="PREVIOUS_COMMIT_AUTHORS">
+      <list>
+        <option value="enimaloc &lt;antoine@enimaloc.fr&gt;" />
+      </list>
+    </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
-  <component name="ProjectColorInfo"><![CDATA[{
-  "associatedIndex": 5
-}]]></component>
+  <component name="ProjectColorInfo">{
+  &quot;associatedIndex&quot;: 5
+}</component>
   <component name="ProjectId" id="2bRQaAih2vJCzoSplj1woZmSiQH" />
   <component name="ProjectLevelVcsManager" settingsEditedManually="true">
     <ConfirmationsSetting value="1" id="Add" />
@@ -40,18 +44,23 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "WebServerToolWindowFactoryState": "false",
-    "git-widget-placeholder": "feat/db",
-    "kotlin-language-version-configured": "true",
-    "node.js.detected.package.eslint": "true",
-    "node.js.detected.package.tslint": "true",
-    "node.js.selected.package.eslint": "(autodetect)",
-    "node.js.selected.package.tslint": "(autodetect)"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;feat/db&quot;,
+    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
+    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
+    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
+    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;
   }
-}]]></component>
+}</component>
+  <component name="RecentsManager">
+    <key name="CopyClassDialog.RECENTS_KEY">
+      <recent name="fr.hashimiste.maps" />
+    </key>
+  </component>
   <component name="SharedIndexes">
     <attachedChunks>
       <set>
@@ -69,6 +78,23 @@
       <updated>1706175482167</updated>
       <workItem from="1706175483939" duration="300000" />
     </task>
+    <task id="LOCAL-00001" summary="Fix manque d'import et de déclaration de package&#10;Fusion de fichiers&#10;TODO: adapter la classe Technique&#10;&#10;(cherry picked from commit 989c8193f7d010ef69863c80df84757a94007c0b)">
+      <option name="closed" value="true" />
+      <created>1708010254539</created>
+      <option name="number" value="00001" />
+      <option name="presentableId" value="LOCAL-00001" />
+      <option name="project" value="LOCAL" />
+      <updated>1708010254539</updated>
+    </task>
+    <task id="LOCAL-00002" summary="Création de classes pour créer la grille de jeu">
+      <option name="closed" value="true" />
+      <created>1708519683326</created>
+      <option name="number" value="00002" />
+      <option name="presentableId" value="LOCAL-00002" />
+      <option name="project" value="LOCAL" />
+      <updated>1708519683326</updated>
+    </task>
+    <option name="localTasksCounter" value="3" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -97,4 +123,9 @@
       </map>
     </option>
   </component>
+  <component name="VcsManagerConfiguration">
+    <MESSAGE value="Fix manque d'import et de déclaration de package&#10;Fusion de fichiers&#10;TODO: adapter la classe Technique&#10;&#10;(cherry picked from commit 989c8193f7d010ef69863c80df84757a94007c0b)" />
+    <MESSAGE value="Création de classes pour créer la grille de jeu" />
+    <option name="LAST_COMMIT_MESSAGE" value="Création de classes pour créer la grille de jeu" />
+  </component>
 </project>
\ No newline at end of file
